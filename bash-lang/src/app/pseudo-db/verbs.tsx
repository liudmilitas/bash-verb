// –ì–õ–ê–ì–û–õ - “†–´–õ–´–ú

export const verbs: object[] = [
  {
    id: 1,
    imperative: "–∞—à–∞",
    infinitive: "–∞—à–∞—Ä“ì–∞",
    properties: {
      is_regular: true,
      is_soft: false,
      is_last_vowel: true,
      is_type_a: true,
    },
    translations: {
      ru: "–µ—Å—Ç—å",
      eng: "to eat",
      emoji: "üçΩüòã",
    },
  },
  {
    id: 2,
    imperative: "—ç—à–ª”ô",
    infinitive: "—ç—à–ª”ô—Ä–≥”ô",
    properties: {
      is_regular: true,
      is_soft: true,
      is_last_vowel: true,
      is_type_a: true,
    },
    translations: {
      ru: "—Ä–∞–±–æ—Ç–∞—Ç—å",
      eng: "to work",
      emoji: "üíºüí™",
    },
  },
  {
    id: 3,
    imperative: "–π”©—Ä”©",
    infinitive: "–π”©—Ä”©—Ä–≥”ô",
    properties: {
      is_regular: true,
      is_soft: true,
      is_last_vowel: true,
      is_type_a: false,
    },
    translations: {
      ru: "—Ö–æ–¥–∏—Ç—å",
      eng: "to go",
      emoji: "üö∂‚Äç‚ôÇÔ∏èüë©‚Äçü¶Ø",
    },
  },
  {
    id: 4,
    imperative: "—è“ô",
    infinitive: "—è“ô—ã—Ä“ì–∞",
    properties: {
      is_regular: true,
      is_soft: false,
      is_last_vowel: false,
      is_type_a: true,
    },
    translations: {
      ru: "–ø–∏—Å–∞—Ç—å",
      eng: "to write",
      emoji: "üìù‚úçÔ∏è",
    },
  },
  {
    id: 5,
    infinitive: "–∫–µ–π–µ–Ω–µ—Ä–≥”ô",
    imperative: "–∫–µ–π–µ–Ω",
    properties: {
      is_regular: true,
      is_soft: true,
      is_last_vowel: false,
      is_type_a: false,
    },
    translations: {
      ru: "–æ–¥–µ–≤–∞—Ç—å—Å—è",
      eng: "to get dressed",
      emoji: "üëïüëñ",
    },
  },
  {
    id: 6,
    infinitive: "—Å–æ“°–æ—Ä“ì–∞",
    imperative: "—Å–æ“°–æ",
    properties: {
      is_regular: true,
      is_soft: false,
      is_last_vowel: true,
      is_type_a: false,
    },
    translations: {
      ru: "–∫–æ–ø–∞—Ç—å",
      eng: "to dig",
      emoji: "üå±üï≥Ô∏è",
    },
  },
];

export function generatePresentSimple(verb: any) {
  if (verb.properties.is_regular) {
    if (verb.properties.is_last_vowel) {
      if (verb.properties.is_type_a) {
        if (verb.properties.is_soft) {
          return {
            first_singular: verb.imperative + "–π–µ–º",
            second_singular: verb.imperative + "–π“ª–µ“£",
            third_singular: verb.imperative + "–π",
            first_plural: verb.imperative + "–π–±–µ“ô",
            second_plural: verb.imperative + "–π“ª–µ–≥–µ“ô",
            third_plural: verb.imperative + "–π“ô”ô—Ä",
          };
        } else {
          return {
            first_singular: verb.imperative + "–π—ã–º",
            second_singular: verb.imperative + "–π“ª—ã“£",
            third_singular: verb.imperative + "–π",
            first_plural: verb.imperative + "–π–±—ã“ô",
            second_plural: verb.imperative + "–π“ª—ã“ì—ã“ô",
            third_plural: verb.imperative + "–π“ô–∞—Ä",
          };
        }
      } else {
        if (verb.properties.is_soft) {
          return {
            first_singular: verb.imperative + "–π”©–º",
            second_singular: verb.imperative + "–π“ª”©“£",
            third_singular: verb.imperative + "–π",
            first_plural: verb.imperative + "–π–±”©“ô",
            second_plural: verb.imperative + "–π“ª”©–≥”©“ô",
            third_plural: verb.imperative + "–π“ô”ô—Ä",
          };
        } else {
          return {
            first_singular: verb.imperative + "–π–æ–º",
            second_singular: verb.imperative + "–π“ª–æ“£",
            third_singular: verb.imperative + "–π",
            first_plural: verb.imperative + "–π–±–æ“ô",
            second_plural: verb.imperative + "–π“ª–æ“ì–æ“ô",
            third_plural: verb.imperative + "–π“ô–∞—Ä",
          };
        }
      }
    } else {
      if (verb.properties.is_soft) {
        return {
          first_singular: verb.imperative + "”ô–º",
          second_singular: verb.imperative + "”ô“ª–µ“£",
          third_singular: verb.imperative + "”ô",
          first_plural: verb.imperative + "”ô–±–µ“ô",
          second_plural: verb.imperative + "”ô“ª–µ–≥–µ“ô",
          third_plural: verb.imperative + "”ô–ª”ô—Ä",
        };
      } else {
        return {
          first_singular: verb.imperative + "–∞–º",
          second_singular: verb.imperative + "–∞“ª—ã“£",
          third_singular: verb.imperative + "–∞",
          first_plural: verb.imperative + "–∞–±—ã“ô",
          second_plural: verb.imperative + "–∞“ª—ã“ì—ã“ô",
          third_plural: verb.imperative + "–∞–ª–∞—Ä",
        };
      }
    }
  } else {
    return "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª!";
  }
}
